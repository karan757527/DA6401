Epoch 1: Train Loss=2.3027, Train Acc=9.99%, Val Loss=2.3028, Val Acc=10.12%
Epoch 2: Train Loss=2.3025, Train Acc=9.99%, Val Loss=2.3027, Val Acc=10.12%
Epoch 3: Train Loss=2.3024, Train Acc=9.99%, Val Loss=2.3026, Val Acc=10.12%
Epoch 4: Train Loss=2.3022, Train Acc=9.99%, Val Loss=2.3024, Val Acc=10.12%
Epoch 5: Train Loss=2.3021, Train Acc=9.99%, Val Loss=2.3023, Val Acc=10.12%
Epoch 6: Train Loss=2.3019, Train Acc=9.99%, Val Loss=2.3021, Val Acc=10.12%
Traceback (most recent call last):
  File "/Users/karanagrawal/Desktop/Sem 2/DL/Assignment 1/train.py", line 82, in <module>
    main()
  File "/Users/karanagrawal/Desktop/Sem 2/DL/Assignment 1/train.py", line 74, in main
    t_loss, t_acc, v_loss, v_acc = nn.fit(batch_size=args.batch_size, epochs=args.epochs, optimizer=opt)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/karanagrawal/Desktop/Sem 2/DL/Assignment 1/neural_network.py", line 138, in fit
    predictions = self.forward_propagation(batch_images)  # forward and backward pass
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/karanagrawal/Desktop/Sem 2/DL/Assignment 1/neural_network.py", line 77, in forward_propagation
    self.h[layer] = self.act.activation(self.a[layer], self.activation_function)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/karanagrawal/Desktop/Sem 2/DL/Assignment 1/activations.py", line 35, in activation
    return activation_function(x)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/karanagrawal/Desktop/Sem 2/DL/Assignment 1/activations.py", line 20, in sigmoid
    result[x < 0] = np.exp(x[x < 0]) / (1 + np.exp(x[x < 0]))  # for negative values
                                            ^^^^^^^^^^^^^^^^
KeyboardInterrupt
